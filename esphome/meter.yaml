#
# Alternative firmware based on ESPHome project.
# It it more flexible as it's up to you what additional sensors you want to support.
#
# That firmware uses custom sensor that parses BLE advertisements.
#
---
esphome:
  name: meter
  platform: ESP32
  board: esp-wrover-kit
  includes:
    - elehant_ble.h

wifi:
  networks: !secret wifi_networks

  ap:
    ssid: "Meter Fallback Hotspot"
    password: !secret wifi_ap_passwd

captive_portal:

# Enable logging
logger:

# Enable Home Assistant API
api:
  # password: "test"

ota:
  # password: "test"

web_server:

esp32_ble_tracker:

time:
  - platform: homeassistant
    id: esp_time
  - platform: sntp
    id: ntp_time
    timezone: Europe/Moscow

text_sensor:
  - platform: wifi_info
    ssid:
      name: SSID
    bssid:
      name: BSSID

  - platform: version
    name: "ESPHome version"

sensor:
  - platform: wifi_signal
    name: "WiFi Signal Sensor"
    update_interval: 10s

  - platform: esp32_hall
    name: "ESP32 Hall Sensor"
    update_interval: 10s

  - platform: uptime
    name: "Uptime"

  - platform: xiaomi_lywsdcgq
    mac_address: 4C:65:A8:D9:9D:9D
    temperature:
      name: "Xiaomi LYWSDCGQ Temperature"
    humidity:
      name: "Xiaomi LYWSDCGQ Humidity"
    battery_level:
      name: "Xiaomi LYWSDCGQ Battery Level"

  - platform: custom
    lambda: |-
      auto meter1 = new ElehantBLE();

      // Set serial number of the device! Like a mac_address for other BLE sensors.
      meter1->set_serial_no(9953);

      // Register
      App.register_component(meter1);
      esp32_ble_tracker_esp32bletracker->register_listener(meter1);
      return {meter1->total_m3_, meter1->total_l_, meter1->rssi_};

    sensors:
      - name: Water Total
        unit_of_measurement: m3
      - name: Water Total (liters)
        unit_of_measurement: L
      - name: Water Meter RSSI

