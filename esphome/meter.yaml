#
# Alternative firmware based on ESPHome project.
# It it more flexible as it's up to you what additional sensors you want to support.
#
# That firmware uses custom sensor that parses BLE advertisements.
#
---
esphome:
  name: meter
  platform: ESP32
  board: esp-wrover-kit
  includes:
    - elehant_ble.h

wifi:
  networks: !secret wifi_networks

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Meter Fallback Hotspot"
    password: !secret wifi_ap_passwd

captive_portal:

# Enable logging
logger:

debug:

# Enable Home Assistant API
api:
  password: !secret api_password
  reboot_timeout: 5min

ota:
  password: !secret ota_password

web_server:
  auth:
    username: admin
    password: !secret web_password

i2c:
  scl: 4
  sda: 5

esp32_ble_tracker:
  id: ble_tracker
  scan_parameters:
    # interval: 100ms
    # window: 99ms
    duration: 5min
    active: false

time:
  - platform: homeassistant
    id: esp_time
  - platform: sntp
    id: ntp_time
    timezone: Europe/Moscow

text_sensor:
  - platform: wifi_info
    ssid:
      name: Meter 1 SSID
    bssid:
      name: Meter 1 BSSID

  - platform: version
    name: "ESPHome version"

binary_sensor:
  - platform: status
    name: Meter Converter Connected

  - platform: gpio
    pin:
      number: 13
      mode: INPUT_PULLDOWN
    name: Terrace3 Motion
    device_class: motion

sensor:
  - platform: wifi_signal
    name: "WiFi Signal Sensor"
    update_interval: 10s

  - platform: esp32_hall
    name: "ESP32 Hall Sensor"
    update_interval: 10s

  - platform: uptime
    name: "Uptime"

  - platform: xiaomi_lywsdcgq
    mac_address: 4C:65:A8:D0:7F:A4
    # mac_address: 4C:65:A8:D9:9D:9D
    temperature:
      name: "Room1 Temperature"
    humidity:
      name: "Room1 Humidity"
    battery_level:
      name: "Room1 temperature/humidity sensor Battery Level"

  - platform: pulse_counter
    pin:
      number: 12
      inverted: true
      mode: INPUT_PULLUP
    unit_of_measurement: kW
    name: Power Meter
    id: power_meter_counter
    filters:
      # See: https://esphome.io/cookbook/power_meter.html
      # My meter has 3200 imp per kWh
      - multiply: 0.01875

  - platform: total_daily_energy
    name: Power Total Daily
    power_id: power_meter_counter

  - platform: integration
    name: Power Total
    sensor: power_meter_counter
    time_unit: min
    restore: true

  - platform: custom
    lambda: |-
      auto meter1 = new ElehantBLE();

      // Set serial number of the device! Like a mac_address for other BLE sensors.
      meter1->set_serial_no(9953);

      // Register
      App.register_component(meter1);
      id(ble_tracker)->register_listener(meter1);
      return {meter1->total_m3_, meter1->total_l_, meter1->rssi_};

    sensors:
      - name: Water1 Total
        unit_of_measurement: m3
        accuracy_decimals: 4
        icon: mdi:water-pump
        id: water1_total_m3
      - name: Water1 Total (liters)
        unit_of_measurement: L
        accuracy_decimals: 1
        icon: mdi:water-pump
        id: water1_total_l
      - name: Water1 Meter RSSI
        icon: mdi:signal
        id: water1_rssi

  # - platform: total_daily_energy
  #   name: Water1 Total Liters daily
  #   power_id: water1_total_l

switch:
  - platform: restart
    name: Meter reboot

font:
  - file: 'slkscr.ttf'
    id: font1
    size: 16

  - file: 'BebasNeue-Regular.ttf'
    id: font2
    size: 16

image:
  - file: "icons/bluetooth.bmp"
    id: bluetooth_img
  - file: "icons/check.bmp"
    id: check_img
  - file: "icons/no_con.bmp"
    id: no_con_img
  - file: "icons/signal_1.bmp"
    id: signal_1_img
  - file: "icons/signal_2.bmp"
    id: signal_2_img
  - file: "icons/signal_3.bmp"
    id: signal_3_img
  - file: "icons/signal_4.bmp"
    id: signal_4_img
  - file: "icons/talk.bmp"
    id: talk_img
  - file: "icons/temperature.bmp"
    id: temperature_img
  - file: "icons/warning.bmp"
    id: warning_img
  - file: "icons/wifi1.bmp"
    id: wifi_1_img
  - file: "icons/wifi2.bmp"
    id: wifi_2_img

display:
  - platform: ssd1306_i2c
    model: "SSD1306 128x64"
    address: 0x3C
    lambda: |-
      static bool prev_beat = false;
      prev_beat = !prev_beat;

      auto wl_is_connected = WiFi.isConnected();
      auto wl_rssi = WiFi.RSSI();

      auto wl_strength = [&](void) {
        if (!wl_is_connected)
          return id(no_con_img);
        else if (wl_rssi > -67)
          return id(signal_4_img);
        else if (wl_rssi > -70)
          return id(signal_3_img);
        else if (wl_rssi > -80)
          return id(signal_2_img);
        else
          return id(signal_1_img);
      };

      it.image(0, 0, (prev_beat)? id(wifi_1_img) : id(wifi_2_img));
      it.image(16, 0, wl_strength());
      it.image(34, 0, id(talk_img));
      it.image(50, 0, (id(api_apiserver).is_connected())? id(check_img) : id(no_con_img));

      if (id(water1_total_m3).has_state()) {
        it.printf(0, 18, id(font1), TextAlign::TOP_LEFT, "W: % 3.4f m3", id(water1_total_m3).state);
      }
      else {
        it.printf(0, 18, id(font1), TextAlign::TOP_LEFT, "W: NO DATA");
      }

      it.printf(0, 34, id(font1), TextAlign::TOP_LEFT, "E: % 3.4f kWh min", id(power_meter_counter).state);
